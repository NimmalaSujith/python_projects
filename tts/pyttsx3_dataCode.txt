pip install pyttsx3
engine = pyttsx3.init()
engine.say("Hi, Welcome to Circuit Digest Tutorial")
engine.runAndWait()



#rate — Integer speech rate in words per minute. The base value is 200.
#voice — String identifier of the active voice
#volume — Floating point volume in the range of 0.0 to 1.0 inclusive
#voices — List of pyttsx3.voice.Voice descriptor objects


engine.setProperty('rate', 150)
engine.getProperty('volume')


voices = engine.getProperty('voices')
for voice in voices:
    print("Voice: %s" % voice.name)
    print(" - ID: %s" % voice.id)
    print(" - Languages: %s" % voice.languages)
    print(" - Gender: %s" % voice.gender)
    print(" - Age: %s" % voice.age)
    print("\n")


engine.setProperty("voice", voices[1].id)

engine.save_to_file("How do you do?", "output.mp3")




.............................................................
engine = pyttsx3.init() # object creation

""" RATE"""
rate = engine.getProperty('rate')   # getting details of current speaking rate
print (rate)                        #printing current voice rate
engine.setProperty('rate', 125)     # setting up new voice rate


"""VOLUME"""
volume = engine.getProperty('volume')   #getting to know current volume level (min=0 and max=1)
print (volume)                          #printing current volume level
engine.setProperty('volume',1.0)    # setting up volume level  between 0 and 1

"""VOICE"""
voices = engine.getProperty('voices')       #getting details of current voice
#engine.setProperty('voice', voices[0].id)  #C
engine.setProperty('voice', voices[1].id)   #changing index, changes voices. 1 for female

"""PITCH"""
pitch = engine.getProperty('pitch')   #Get current pitch value
print(pitch)                          #Print current pitch value
engine.setProperty('pitch', 75)       #Set the pitch (default 50) to 75 out of 100

engine.say("Hello World!")
engine.say('My current speaking rate is ' + str(rate))
engine.runAndWait()
engine.stop()


"""Saving Voice to a file"""
# On linux make sure that 'espeak' and 'ffmpeg' are installed
engine.save_to_file('Hello World', 'test.mp3')
engine.runAndWait()

.............................................................
import pyttsx3 # pyttsx3 is a text-to-speech conversion library in Python
import speech_recognition as s #Google Speech API in Python

#Functional programming Model

def text_to_speech(text):
    #engine connects us to hardware in this case 
    eng= pyttsx3.init()
    #Engine created 
    eng.say(text)
    #Runs for small duration of time ohterwise we may not be able to hear
    eng.runAndWait()

    
def speech_to_text():
    r=s.Recognizer()# an object r which recognises the voice
    with s.Microphone() as source:
        #when using with statement. The with statement itself ensures proper acquisition and release of resources
        print(r.recognize_google(audio))
        text_to_speech(r.recognize_google(audio)) 
        
speech_to_text()